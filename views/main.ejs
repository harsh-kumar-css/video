<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:wght@200;300;400;500;600&display=swap"
      rel="stylesheet"
    />
    <script src="https://unpkg.com/ionicons@5.4.0/dist/ionicons.js"></script>
    <title>Frigoo | video chat</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  </head>
  <style>
    body {
      width: 100%;
      height: 100%;
      font-family: "Montserrat", sans-serif;
      scroll-behavior: smooth;
      overflow: hidden;
      background-image: url(https://wallpaperaccess.com/full/2224368.png);
    }

    .main-page {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      height: 95vh;
    }

    .main-page .user_vids {
      /* border: 3px solid rgba(240, 230, 230, 0.733); */
      border-radius: 5px;
      width: 80%;
      height: 95vh;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: space-evenly;
      -ms-flex-pack: space-evenly;
      justify-content: space-evenly;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
    }

    .main-page .user_vids .my_vid {
      margin-right: 20px;
      border: 3px solid rgba(240, 230, 230, 0.733);
      box-shadow: 5px 5px 5px rgba(226, 221, 221, 0.349);
      backdrop-filter: blur(2px);
      border-radius: 5px;
      overflow: hidden;
      width: 25%;
      height: 90%;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -ms-flex-pack: distribute;
      justify-content: space-around;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
    }

    .main-page .user_vids .my_vid #ourVideo {
      width: 65%;
      height: 25%;
      border: 3px solid rgba(240, 230, 230, 0.733);
      border-radius: 5px;
      margin: 10px;
      overflow: hidden;
    }

    .main-page .user_vids .my_vid #ourVideo video {
      width: 100%;
      height: 100%;
    }

    .main-page .user_vids .my_vid .call {
      width: 80%;
      height: 60%;
      border-radius: 5px;
      padding: 25px;
      margin: 0 15px;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-pack: justify;
      -ms-flex-pack: justify;
      justify-content: space-between;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
    }

    .main-page .user_vids .my_vid .call .my_id {
      width: 90%;
    }

    .main-page .user_vids .my_vid .call .my_id h3 {
      border: 2px solid #f0e6e6;
      padding: 5px;
      word-wrap: break-word;
      -webkit-box-shadow: 5px 5px 5px rgba(226, 221, 221, 0.349);
      box-shadow: 5px 5px 5px rgba(226, 221, 221, 0.349);
      border-radius: 5px;
      padding: 15px;
      color: #fff;
    }

    .main-page .user_vids .my_vid .call input {
      width: 90%;
      border-radius: 5px;
      height: 20px;
      padding: 5px;
      width: 17em;
      outline: none;
      border: 3px solid rgba(236, 231, 231, 0.733);
      font-family: "Montserrat", sans-serif;
      font-weight: 400;
      background-color: transparent;
      color: #fff;
    }

    .main-page .user_vids .my_vid .call .inputs {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
    }

    .main-page .user_vids .my_vid .call .inputs div {
      height: 100px;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      margin: 10px 0px;
    }

    .main-page .user_vids .my_vid .call .inputs ion-icon {
      font-size: 25px;
      padding: 10px;
      color: #b6b3b3;
      border: 2px solid #f0e6e6;
      border-radius: 100px;
      margin: 5px 15px;
      -webkit-transition-duration: 0.2s;
      transition-duration: 0.2s;
    }

    .main-page .user_vids .my_vid .call .inputs ion-icon:hover,
    .main-page .user_vids .my_vid .call .inputs ion-icon:active {
      cursor: pointer;
      font-size: 32px;
      color: #fff;
      -webkit-transform: translateY(-10px);
      transform: translateY(-10px);
      border: 2px solid #f0e6e6;
      -webkit-box-shadow: 5px 5px 5px rgba(141, 135, 135, 0.349);
      box-shadow: 5px 5px 5px rgba(141, 135, 135, 0.349);
      border-radius: 100px;
      -webkit-transition-duration: 0.2s;
      transition-duration: 0.2s;
    }

    .main-page .user_vids .my_vid .call .inputs ion-icon:active {
      -webkit-transform: translateY(2px);
      transform: translateY(2px);
      -webkit-transition-duration: 0.2s;
      transition-duration: 0.2s;
    }

    .main-page .user_vids #remoteVideo {
      border: 3px solid rgba(240, 230, 230, 0.733);
      box-shadow: 5px 5px 5px rgba(226, 221, 221, 0.349);
      border-radius: 5px;
      width: 70%;
      height: 90%;
      backdrop-filter: blur(2px);
    }

    .main-page .user_vids #remoteVideo video {
      width: 100%;
      height: 100%;
    }

    ::-webkit-scrollbar {
      width: 10px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
      background: #f0e6e6;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
      background: #f0e6e6;
    }

    /* Handle on hover */
    ::-webkit-scrollbar-thumb:hover {
      background: #c2bebe;
    }
    /*# sourceMappingURL=style.css.map */

    ::-webkit-input-placeholder {
      /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: #fff;
      opacity: 1;
      /* Firefox */
    }

    :-ms-input-placeholder {
      /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: #fff;
      opacity: 1;
      /* Firefox */
    }

    ::-ms-input-placeholder {
      /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: #fff;
      opacity: 1;
      /* Firefox */
    }

    ::placeholder {
      /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: #fff;
      opacity: 1;
      /* Firefox */
    }
    .preloader {
      top: 0%;
      left: 0%;
      width: 100%;
      height: 100%;
      position: absolute;
      background-color: #063131;
    }

    h1 {
      position: absolute;
      font-family: "Open Sans";
      font-weight: 600;
      font-size: 12px;
      text-transform: uppercase;
      left: 50%;
      top: 58%;
      margin-left: -20px;
      color: #fff;
      letter-spacing: 0.1cm;
    }

    .body {
      position: absolute;
      top: 50%;
      margin-left: -50px;
      left: 50%;
      -webkit-animation: speeder 0.4s linear infinite;
      animation: speeder 0.4s linear infinite;
    }

    .body > span {
      height: 5px;
      width: 35px;
      background: #fff;
      position: absolute;
      top: -19px;
      left: 60px;
      border-radius: 2px 10px 1px 0;
    }

    .base span {
      position: absolute;
      width: 0;
      height: 0;
      border-top: 6px solid transparent;
      border-right: 100px solid #fff;
      border-bottom: 6px solid transparent;
    }

    .base span:before {
      content: "";
      height: 22px;
      width: 22px;
      border-radius: 50%;
      background: #fff;
      position: absolute;
      right: -110px;
      top: -16px;
    }

    .base span:after {
      content: "";
      position: absolute;
      width: 0;
      height: 0;
      border-top: 0 solid transparent;
      border-right: 55px solid #fff;
      border-bottom: 16px solid transparent;
      top: -16px;
      right: -98px;
    }

    .face {
      position: absolute;
      height: 12px;
      width: 20px;
      background: #fff;
      border-radius: 20px 20px 0 0;
      -webkit-transform: rotate(-40deg);
      transform: rotate(-40deg);
      right: -125px;
      top: -15px;
    }

    .face:after {
      content: "";
      height: 12px;
      width: 12px;
      background: #fff;
      right: 4px;
      top: 7px;
      position: absolute;
      -webkit-transform: rotate(40deg);
      transform: rotate(40deg);
      -webkit-transform-origin: 50% 50%;
      transform-origin: 50% 50%;
      border-radius: 0 0 0 2px;
    }

    .body > span > span:nth-child(1),
    .body > span > span:nth-child(2),
    .body > span > span:nth-child(3),
    .body > span > span:nth-child(4) {
      width: 30px;
      height: 1px;
      background: #fff;
      position: absolute;
      -webkit-animation: fazer1 0.2s linear infinite;
      animation: fazer1 0.2s linear infinite;
    }

    .body > span > span:nth-child(2) {
      top: 3px;
      -webkit-animation: fazer2 0.4s linear infinite;
      animation: fazer2 0.4s linear infinite;
    }

    .body > span > span:nth-child(3) {
      top: 1px;
      -webkit-animation: fazer3 0.4s linear infinite;
      animation: fazer3 0.4s linear infinite;
      -webkit-animation-delay: -1s;
      animation-delay: -1s;
    }

    .body > span > span:nth-child(4) {
      top: 4px;
      -webkit-animation: fazer4 1s linear infinite;
      animation: fazer4 1s linear infinite;
      -webkit-animation-delay: -1s;
      animation-delay: -1s;
    }

    @-webkit-keyframes fazer1 {
      0% {
        left: 0;
      }
      100% {
        left: -80px;
        opacity: 0;
      }
    }

    @keyframes fazer1 {
      0% {
        left: 0;
      }
      100% {
        left: -80px;
        opacity: 0;
      }
    }

    @-webkit-keyframes fazer2 {
      0% {
        left: 0;
      }
      100% {
        left: -100px;
        opacity: 0;
      }
    }

    @keyframes fazer2 {
      0% {
        left: 0;
      }
      100% {
        left: -100px;
        opacity: 0;
      }
    }

    @-webkit-keyframes fazer3 {
      0% {
        left: 0;
      }
      100% {
        left: -50px;
        opacity: 0;
      }
    }

    @keyframes fazer3 {
      0% {
        left: 0;
      }
      100% {
        left: -50px;
        opacity: 0;
      }
    }

    @-webkit-keyframes fazer4 {
      0% {
        left: 0;
      }
      100% {
        left: -150px;
        opacity: 0;
      }
    }

    @keyframes fazer4 {
      0% {
        left: 0;
      }
      100% {
        left: -150px;
        opacity: 0;
      }
    }

    @-webkit-keyframes speeder {
      0% {
        -webkit-transform: translate(2px, 1px) rotate(0deg);
        transform: translate(2px, 1px) rotate(0deg);
      }
      10% {
        -webkit-transform: translate(-1px, -3px) rotate(-1deg);
        transform: translate(-1px, -3px) rotate(-1deg);
      }
      20% {
        -webkit-transform: translate(-2px, 0px) rotate(1deg);
        transform: translate(-2px, 0px) rotate(1deg);
      }
      30% {
        -webkit-transform: translate(1px, 2px) rotate(0deg);
        transform: translate(1px, 2px) rotate(0deg);
      }
      40% {
        -webkit-transform: translate(1px, -1px) rotate(1deg);
        transform: translate(1px, -1px) rotate(1deg);
      }
      50% {
        -webkit-transform: translate(-1px, 3px) rotate(-1deg);
        transform: translate(-1px, 3px) rotate(-1deg);
      }
      60% {
        -webkit-transform: translate(-1px, 1px) rotate(0deg);
        transform: translate(-1px, 1px) rotate(0deg);
      }
      70% {
        -webkit-transform: translate(3px, 1px) rotate(-1deg);
        transform: translate(3px, 1px) rotate(-1deg);
      }
      80% {
        -webkit-transform: translate(-2px, -1px) rotate(1deg);
        transform: translate(-2px, -1px) rotate(1deg);
      }
      90% {
        -webkit-transform: translate(2px, 1px) rotate(0deg);
        transform: translate(2px, 1px) rotate(0deg);
      }
      100% {
        -webkit-transform: translate(1px, -2px) rotate(-1deg);
        transform: translate(1px, -2px) rotate(-1deg);
      }
    }

    @keyframes speeder {
      0% {
        -webkit-transform: translate(2px, 1px) rotate(0deg);
        transform: translate(2px, 1px) rotate(0deg);
      }
      10% {
        -webkit-transform: translate(-1px, -3px) rotate(-1deg);
        transform: translate(-1px, -3px) rotate(-1deg);
      }
      20% {
        -webkit-transform: translate(-2px, 0px) rotate(1deg);
        transform: translate(-2px, 0px) rotate(1deg);
      }
      30% {
        -webkit-transform: translate(1px, 2px) rotate(0deg);
        transform: translate(1px, 2px) rotate(0deg);
      }
      40% {
        -webkit-transform: translate(1px, -1px) rotate(1deg);
        transform: translate(1px, -1px) rotate(1deg);
      }
      50% {
        -webkit-transform: translate(-1px, 3px) rotate(-1deg);
        transform: translate(-1px, 3px) rotate(-1deg);
      }
      60% {
        -webkit-transform: translate(-1px, 1px) rotate(0deg);
        transform: translate(-1px, 1px) rotate(0deg);
      }
      70% {
        -webkit-transform: translate(3px, 1px) rotate(-1deg);
        transform: translate(3px, 1px) rotate(-1deg);
      }
      80% {
        -webkit-transform: translate(-2px, -1px) rotate(1deg);
        transform: translate(-2px, -1px) rotate(1deg);
      }
      90% {
        -webkit-transform: translate(2px, 1px) rotate(0deg);
        transform: translate(2px, 1px) rotate(0deg);
      }
      100% {
        -webkit-transform: translate(1px, -2px) rotate(-1deg);
        transform: translate(1px, -2px) rotate(-1deg);
      }
    }

    .longfazers {
      position: absolute;
      width: 100%;
      height: 100%;
    }

    .longfazers span {
      position: absolute;
      height: 2px;
      width: 20%;
      background: #fff;
    }

    .longfazers span:nth-child(1) {
      top: 20%;
      -webkit-animation: lf 0.6s linear infinite;
      animation: lf 0.6s linear infinite;
      -webkit-animation-delay: -5s;
      animation-delay: -5s;
    }

    .longfazers span:nth-child(2) {
      top: 40%;
      -webkit-animation: lf2 0.8s linear infinite;
      animation: lf2 0.8s linear infinite;
      -webkit-animation-delay: -1s;
      animation-delay: -1s;
    }

    .longfazers span:nth-child(3) {
      top: 60%;
      -webkit-animation: lf3 0.6s linear infinite;
      animation: lf3 0.6s linear infinite;
    }

    .longfazers span:nth-child(4) {
      top: 80%;
      -webkit-animation: lf4 0.5s linear infinite;
      animation: lf4 0.5s linear infinite;
      -webkit-animation-delay: -3s;
      animation-delay: -3s;
    }

    @-webkit-keyframes lf {
      0% {
        left: 200%;
      }
      100% {
        left: -200%;
        opacity: 0;
      }
    }

    @keyframes lf {
      0% {
        left: 200%;
      }
      100% {
        left: -200%;
        opacity: 0;
      }
    }

    @-webkit-keyframes lf2 {
      0% {
        left: 200%;
      }
      100% {
        left: -200%;
        opacity: 0;
      }
    }

    @keyframes lf2 {
      0% {
        left: 200%;
      }
      100% {
        left: -200%;
        opacity: 0;
      }
    }

    @-webkit-keyframes lf3 {
      0% {
        left: 200%;
      }
      100% {
        left: -100%;
        opacity: 0;
      }
    }

    @keyframes lf3 {
      0% {
        left: 200%;
      }
      100% {
        left: -100%;
        opacity: 0;
      }
    }

    @-webkit-keyframes lf4 {
      0% {
        left: 200%;
      }
      100% {
        left: -100%;
        opacity: 0;
      }
    }

    @keyframes lf4 {
      0% {
        left: 200%;
      }
      100% {
        left: -100%;
        opacity: 0;
      }
    }
  </style>
  <body>
    <div class="main-page">
      <div class="user_vids">
        <div class="my_vid">
          <div id="ourVideo"></div>
          <div class="call">
            <div class="my_id">
              <h3 id="show-peer"></h3>
            </div>

            <div>
              <input
                type="text"
                id="peerId"
                placeholder="enter id of person to call . . ."
              />
            </div>
            <div class="inputs">
              <div class="one" id="call-peer">
                <ion-icon name="videocam-outline"></ion-icon>
              </div>
              <div class="second" id="shareScreen">
                <ion-icon name="desktop-outline"></ion-icon>
              </div>
            </div>
          </div>
        </div>
        <div id="remoteVideo"></div>
      </div>
    </div>
    <div class="preloader">
      <div class="body">
        <span>
          <span></span>
          <span></span>
          <span></span>
          <span></span>
        </span>
        <div class="base">
          <span></span>
          <div class="face"></div>
        </div>
      </div>
      <div class="longfazers">
        <span></span>
        <span></span>
        <span></span>
        <span></span>
      </div>
      <h1>Loading ...</h1>
    </div>
  </body>
  <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
  <script>
    window.addEventListener("load", (event) => {
      var peer = new Peer();
      var myStream;
      var currentPeer;
      var peerList = [];
      peer.on("open", function (id) {
        document.getElementById(
          "show-peer"
        ).innerHTML = ` Your id :<br /><br />${id}`;
      });

      peer.on("call", function (call) {
        navigator.mediaDevices
          .getUserMedia({
            video: true,
            audio: true,
          })
          .then((stream) => {
            myStream = stream;
            addOurVideo(stream);
            call.answer(stream);
            call.on("stream", function (remoteStream) {
              if (!peerList.includes(call.peer)) {
                addRemoteVideo(remoteStream);
                currentPeer = call.peerConnection;
                peerList.push(call.peer);
              }
            });
          })
          .catch((err) => {
            console.log(err + "unable to get media");
          });
      });

      document.getElementById("call-peer").addEventListener("click", (e) => {
        let remotePeerId = document.getElementById("peerId").value;
        if (remotePeerId != "") {
          callPeer(remotePeerId);
        }
      });

      document.getElementById("shareScreen").addEventListener("click", (e) => {
        let remotePeerId = document.getElementById("peerId").value;
        if (remotePeerId != "") {
          navigator.mediaDevices
            .getDisplayMedia({
              video: {
                cursor: "always",
              },
              audio: {
                echoCancellation: true,
                noiseSuppression: true,
              },
            })
            .then((stream) => {
              let videoTrack = stream.getVideoTracks()[0];
              videoTrack.onended = function () {
                stopScreenShare();
              };
              let sender = currentPeer.getSenders().find(function (s) {
                return s.track.kind == videoTrack.kind;
              });
              sender.replaceTrack(videoTrack);
            })
            .catch((err) => {
              alert("unable to get media");
            });
        }
      });

      function callPeer(id) {
        navigator.mediaDevices
          .getUserMedia({
            video: true,
            audio: true,
          })
          .then((stream) => {
            myStream = stream;
            addOurVideo(stream);
            let call = peer.call(id, stream);
            call.on("stream", function (remoteStream) {
              if (!peerList.includes(call.peer)) {
                addRemoteVideo(remoteStream);
                currentPeer = call.peerConnection;
                peerList.push(call.peer);
              }
            });
          })
          .catch((err) => {
            alert("unable to get media");
          });
      }

      function stopScreenShare() {
        let videoTrack = myStream.getVideoTracks()[0];
        var sender = currentPeer.getSenders().find(function (s) {
          return s.track.kind == videoTrack.kind;
        });
        sender.replaceTrack(videoTrack);
      }

      function addRemoteVideo(stream) {
        let video = document.createElement("video");
        video.srcObject = stream;
        video.play();

        document.getElementById("remoteVideo").append(video);
      }

      function addOurVideo(stream) {
        let video = document.createElement("video");
        video.srcObject = stream;
        video.muted = true;
        video.play();

        document.getElementById("ourVideo").append(video);
      }
    });
  </script>
  <script>
    $(window).on("load", function () {
      $(".preloader").fadeOut("slow");
      $(".main-page").css("display", "flex");
    });
  </script>
</html>
