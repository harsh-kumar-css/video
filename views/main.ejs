<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:wght@200;300;400;500;600&display=swap"
      rel="stylesheet"
    />
    <script src="https://unpkg.com/ionicons@5.4.0/dist/ionicons.js"></script>
    <title>Frigoo | video chat</title>
  </head>
  <style>
    body {
      width: 100%;
      height: 100%;
      font-family: "Montserrat", sans-serif;
      scroll-behavior: smooth;
      overflow: hidden;
    }

    .main-page {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      height: 95vh;
    }

    .main-page .user_vids {
      border: 3px solid rgba(240, 230, 230, 0.733);
      border-radius: 5px;
      width: 80%;
      height: 95vh;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: space-evenly;
      -ms-flex-pack: space-evenly;
      justify-content: space-evenly;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
    }

    .main-page .user_vids .my_vid {
      border: 3px solid rgba(240, 230, 230, 0.733);
      border-radius: 5px;
      width: 25%;
      height: 90%;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -ms-flex-pack: distribute;
      justify-content: space-around;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
    }

    .main-page .user_vids .my_vid #ourVideo {
      width: 80%;
      height: 30%;
      border: 3px solid rgba(240, 230, 230, 0.733);
      border-radius: 5px;
      margin: 10px;
    }

    .main-page .user_vids .my_vid #ourVideo video {
      width: 100%;
      height: 100%;
    }

    .main-page .user_vids .my_vid .call {
      width: 80%;
      height: 60%;
      border-radius: 5px;
      padding: 25px;
      margin: 0 15px;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-pack: justify;
      -ms-flex-pack: justify;
      justify-content: space-between;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
    }

    .main-page .user_vids .my_vid .call .my_id {
      width: 90%;
    }

    .main-page .user_vids .my_vid .call .my_id h3 {
      border: 2px solid #f0e6e6;
      padding: 5px;
      word-wrap: break-word;
      -webkit-box-shadow: 5px 5px 5px rgba(226, 221, 221, 0.349);
      box-shadow: 5px 5px 5px rgba(226, 221, 221, 0.349);
      border-radius: 5px;
      padding: 15px;
      background: -webkit-gradient(
        linear,
        left top,
        right top,
        from(#f32172c7),
        color-stop(#ff6b08c2),
        to(#cf23cfbd)
      );
      background: linear-gradient(to right, #f32172c7, #ff6b08c2, #cf23cfbd);
      -webkit-text-fill-color: transparent;
      -webkit-background-clip: text;
    }

    .main-page .user_vids .my_vid .call input {
      width: 90%;
      border-radius: 5px;
      height: 20px;
      padding: 5px;
      width: 17em;
      outline: none;
      border: 3px solid rgba(236, 231, 231, 0.733);
      font-family: "Montserrat", sans-serif;
      font-weight: 400;
    }

    .main-page .user_vids .my_vid .call .inputs {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
    }

    .main-page .user_vids .my_vid .call .inputs div {
      height: 100px;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      margin: 10px 0px;
    }

    .main-page .user_vids .my_vid .call .inputs ion-icon {
      font-size: 25px;
      padding: 10px;
      color: #b6b3b3;
      border: 2px solid #f0e6e6;
      -webkit-box-shadow: 5px 5px 5px rgba(226, 221, 221, 0.349);
      box-shadow: 5px 5px 5px rgba(226, 221, 221, 0.349);
      border-radius: 100px;
      margin: 5px 15px;
    }

    .main-page .user_vids .my_vid .call .inputs ion-icon:hover,
    .main-page .user_vids .my_vid .call .inputs ion-icon:active {
      cursor: pointer;
      font-size: 32px;
      color: red;
      -webkit-transform: translateY(-10px);
      transform: translateY(-10px);
      border: 2px solid #f0e6e6;
      -webkit-box-shadow: 5px 5px 5px rgba(141, 135, 135, 0.349);
      box-shadow: 5px 5px 5px rgba(141, 135, 135, 0.349);
      border-radius: 100px;
      -webkit-transition-duration: 0.2s;
      transition-duration: 0.2s;
    }

    .main-page .user_vids .my_vid .call .inputs ion-icon:active {
      -webkit-transform: translateY(2px);
      transform: translateY(2px);
      -webkit-transition-duration: 0.2s;
      transition-duration: 0.2s;
    }

    .main-page .user_vids #remoteVideo {
      border: 3px solid rgba(240, 230, 230, 0.733);
      border-radius: 5px;
      width: 70%;
      height: 90%;
    }

    .main-page .user_vids #remoteVideo video {
      width: 100%;
      height: 100%;
    }

    ::-webkit-scrollbar {
      width: 10px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
      background: #f0e6e6;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
      background: #f0e6e6;
    }

    /* Handle on hover */
    ::-webkit-scrollbar-thumb:hover {
      background: #c2bebe;
    }
    /*# sourceMappingURL=style.css.map */
  </style>
  <body>
    <div class="main-page">
      <div class="user_vids">
        <div class="my_vid">
          <div id="ourVideo"></div>
          <div class="call">
            <div class="my_id">
              <h3 id="show-peer"></h3>
            </div>

            <div>
              <input
                type="text"
                id="peerId"
                placeholder="id of person you want to call . . ."
              />
            </div>
            <div class="inputs">
              <div class="one" id="call-peer">
                <ion-icon name="videocam-outline"></ion-icon>
              </div>
              <div class="second" id="shareScreen">
                <ion-icon name="desktop-outline"></ion-icon>
              </div>
            </div>
          </div>
        </div>
        <div id="remoteVideo"></div>
      </div>
    </div>
  </body>
  <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
  <script>
    window.addEventListener("load", (event) => {
      var peer = new Peer();
      var myStream;
      var currentPeer;
      var peerList = [];
      peer.on("open", function (id) {
        document.getElementById(
          "show-peer"
        ).innerHTML = ` Your id :<br /><br />${id}`;
      });

      peer.on("call", function (call) {
        navigator.mediaDevices
          .getUserMedia({
            video: true,
            audio: true,
          })
          .then((stream) => {
            myStream = stream;
            addOurVideo(stream);
            call.answer(stream);
            call.on("stream", function (remoteStream) {
              if (!peerList.includes(call.peer)) {
                addRemoteVideo(remoteStream);
                currentPeer = call.peerConnection;
                peerList.push(call.peer);
              }
            });
          })
          .catch((err) => {
            console.log(err + "unable to get media");
          });
      });

      document.getElementById("call-peer").addEventListener("click", (e) => {
        let remotePeerId = document.getElementById("peerId").value;
        callPeer(remotePeerId);
      });

      document.getElementById("shareScreen").addEventListener("click", (e) => {
        navigator.mediaDevices
          .getDisplayMedia({
            video: {
              cursor: "always",
            },
            audio: {
              echoCancellation: true,
              noiseSuppression: true,
            },
          })
          .then((stream) => {
            let videoTrack = stream.getVideoTracks()[0];
            videoTrack.onended = function () {
              stopScreenShare();
            };
            let sender = currentPeer.getSenders().find(function (s) {
              return s.track.kind == videoTrack.kind;
            });
            sender.replaceTrack(videoTrack);
          })
          .catch((err) => {
            alert("unable to get media");
          });
      });

      function callPeer(id) {
        navigator.mediaDevices
          .getUserMedia({
            video: true,
            audio: true,
          })
          .then((stream) => {
            myStream = stream;
            addOurVideo(stream);
            let call = peer.call(id, stream);
            call.on("stream", function (remoteStream) {
              if (!peerList.includes(call.peer)) {
                addRemoteVideo(remoteStream);
                currentPeer = call.peerConnection;
                peerList.push(call.peer);
              }
            });
          })
          .catch((err) => {
            alert("unable to get media");
          });
      }

      function stopScreenShare() {
        let videoTrack = myStream.getVideoTracks()[0];
        var sender = currentPeer.getSenders().find(function (s) {
          return s.track.kind == videoTrack.kind;
        });
        sender.replaceTrack(videoTrack);
      }

      function addRemoteVideo(stream) {
        let video = document.createElement("video");
        video.srcObject = stream;
        video.play();

        document.getElementById("remoteVideo").append(video);
      }

      function addOurVideo(stream) {
        let video = document.createElement("video");
        video.srcObject = stream;
        video.muted = true;
        video.play();

        document.getElementById("ourVideo").append(video);
      }
    });
  </script>
</html>
